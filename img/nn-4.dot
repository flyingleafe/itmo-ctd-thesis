digraph lstm_nn {
  node [shape="plaintext"]

  d_label [label="d = 5"]
  s_label [label="s = 1"]
  y_label [label="y = {2, 3}"]
  // A_label [label=<A<SUB>g</SUB>>]

node [shape=none];

    d_input [label=<<table border="0" cellspacing="0" cellborder="1" cellpadding="5">
                      <tr border="0">
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>1</td>
                      </tr>
                  </table>>];
    s_input [label=<<table border="0" cellspacing="0"  cellpadding="5">
                      <tr border="0">
                        <td border="1">1</td>
                        <td border="1">0</td>
                        <td border="1">0</td>
                        <td border="1">0</td>
                        <td border="1">0</td>
                      </tr>
                  </table>>];
    y_input [label=<<table border="0" cellspacing="0" cellpadding="5">
                      <tr border="0">
                        <td border="1">0</td>
                        <td border="1">1</td>
                        <td border="1">1</td>
                        <td border="1">0</td>
                        <td border="1">0</td>
                      </tr>
                  </table>>];

    // A_input [label=<<table border="0" cellspacing="0" cellpadding="5">
    //                   <tr border="0">
    //                     <td border="1">1</td>
    //                     <td border="1">1</td>
    //                     <td border="1">0</td>
    //                     <td border="1">0</td>
    //                   </tr>
    //                   <tr border="0">
    //                     <td border="0"></td>
    //                     <td border="1">1</td>
    //                     <td border="1">1</td>
    //                     <td border="1">0</td>
    //                   </tr>
    //                   <tr border="0">
    //                     <td border="0"></td>
    //                     <td border="0"></td>
    //                     <td border="1">1</td>
    //                     <td border="1">1</td>
    //                   </tr>
    //                   <tr border="0">
    //                     <td border="0"></td>
    //                     <td border="0"></td>
    //                     <td border="0"></td>
    //                     <td border="1">1</td>
    //                   </tr>
    //                 </table>>];

    subgraph {
      {rank=same;
        d_input,
        s_input,
        y_input
        // A_input
      }
    }

node [shape="box"]
    layer_1 [label="fully-connected, 64 units"];

    lstm_prev [shape="plaintext", label=<C<SUB>t-1</SUB>, h<SUB>t-1</SUB>>]
    layer_2 [label="LSTM, 64 units"];
    lstm_next [shape="plaintext", label=<C<SUB>t</SUB>, h<SUB>t</SUB>>]

    layer_3 [label="fully-connected, 5 units"];

    sum [shape="circle", label="+"]

    output [shape=none, label=<<table border="0" cellspacing="0" cellpadding="5">
                      <tr border="0">
                        <td border="1">-∞</td>
                        <td border="1">q<SUB>2</SUB></td>
                        <td border="1">q<SUB>3</SUB></td>
                        <td border="1">-∞</td>
                        <td border="1">-∞</td>
                      </tr>
                  </table>>];

     subgraph {
       {rank=same;
         lstm_prev -> layer_2 -> lstm_next
       }
     }

    d_label -> d_input
    s_label -> s_input
    y_label -> y_input
    // A_label -> A_input

    d_input -> layer_1
    s_input -> layer_1
    y_input -> layer_1
    // A_input -> layer_1

    // fucking_label [shape="plaintext", label="if y = 0 then -∞ else 0"]
    // y_input -> fucking_label [constraint=false]
    // fucking_label -> sum

    // subgraph {
    //   {rank=same;
    //     layer_1, fucking_label
    //   }
    // }

    layer_1 -> layer_2 [label="  tanh"]
    // lstm_prev -> layer_2
    // layer_2 -> lstm_next
    layer_2 -> layer_3 [label="  tanh"]
    layer_3 -> sum [label="  linear"]

    sum -> output

edge [style="invis"]
    d_input -> s_input -> y_input
}
